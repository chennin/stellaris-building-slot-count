﻿# Show Building Slot Capacity 
l_german:
  fl_num_building_long: "§S$planet_buildings$§!\n$MACHINE1_FLEET_Limit$: $fl_building_capacity_color$\n$VALUE_MAXIMUM$: $@MAX_PLANET_BUILDING_SLOTS|0B$\n$building_constructed$: §W[This.fl_building_built_dyn]§![This.fl_building_constructing_dyn]\n$OUTLINER_PLANET_CONSTRUCTION_AVAILABLE$: [This.fl_bslot_free_dyn]\n$SEPARATOR$\n§S$MOD_PLANET_MAX_BUILDINGS_ADD$§!\n$CAPITAL$: 1 $PLUS$ [This.fl_building_from_capital][This.fl_bslot_from_housing_dyn][This.fl_bslot_from_orbitals_dyn][This.fl_bslot_from_industrial_districts_buildings_dyn][This.fl_bslot_from_tech_dyn][This.fl_bslot_from_cta_dyn][This.fl_bslot_from_empire_mods_dyn][This.fl_bslot_from_holding_dyn][This.fl_bslot_from_demesne_dyn][This.fl_bslot_from_demesne_device_dyn][This.fl_bslot_from_origin_dyn][This.fl_bslot_from_pc_dyn][This.fl_bslot_deposit_dyn][This.fl_bslot_from_edicts_dyn]"
  
  fl_num_building_long_static: "DEBUG\n[This.fl_scope_is_planet]\n  This: [This.GetName]\n  Owner: [Owner.GetName]\nNum orbitals:\n  Generic: [solar_system.GetNumOrbitalsGeneric]\n  Mining: [solar_system.GetNumOrbitalsMining]\n  Science: [solar_system.GetNumOrbitalsScience]\n  Energy: [solar_system.GetNumOrbitalsEnergy]\n\n§S$planet_buildings$§!\n$MACHINE1_FLEET_Limit$: $fl_building_capacity_color$\n$VALUE_MAXIMUM$: $@MAX_PLANET_BUILDING_SLOTS|0B$\n$building_constructed$: §W[This.fl_building_built_dyn]§!$fl_building_constructing$\n$OUTLINER_PLANET_CONSTRUCTION_AVAILABLE$: [This.fl_building_free]\n$SEPARATOR$\n§S$MOD_PLANET_MAX_BUILDINGS_ADD$§!\n$CAPITAL$: 1 $PLUS$ [This.fl_building_from_capital]$fl_bslot_from_housing$$fl_bslot_from_orbitals$$fl_bslot_from_industrial_districts_buildings$$fl_bslot_from_tech$$fl_bslot_from_cta$$fl_bslot_from_empire_mods$$fl_bslot_from_holding$$fl_bslot_from_demesne$$fl_bslot_from_demesne_device$$fl_bslot_from_origin$$fl_bslot_from_pc$$fl_bslot_deposit_good$$fl_bslot_from_edicts$"
 
#
# Process for the dynamic tooltip (fl_num_building_long):
#   SCRIPTED LOC (dynamic), inline script, checks if the value is > 0, static loc key (this file), static scripted loc
#
# Example names:
# LOC KEY:        fl_bslot_from_empire_mods
# SCRIPTED VALUE: bslot_from_empire_mods
# INLINE SCRIPT:  KEY = empire_mods
# SCRIPTED LOC (dynamic): fl_bslot_from_empire_mods_dyn
# SCRIPTED LOC:   fl_building_from_empire_mods

  fl_button_text: "§Y[This.fl_bslot_free_dyn]§!"
  fl_building_capacity_color: "§Y[This.fl_building_capacity]§!"
  fl_building_capacity: "[This.fl_building_capacity]"
  fl_building_constructing: "\n$DISTRICT_UNDER_CONSTRUCTION$[This.fl_building_constructing]"
  fl_building_free_good: "§G[This.fl_building_free]§!"
  fl_building_free_zero: "§W[This.fl_building_free]§!"
  fl_building_free_bad: "§R[This.fl_building_free]§!"
  fl_bslot_deposit_good: "\n$DEPOSITS_TITLE$: §W[This.fl_building_from_deposits]§!"
  fl_bslot_deposit_bad: "\n$DEPOSITS_TITLE$: §R[This.fl_building_from_deposits]§!"
  fl_bslot_from_tech: "\n$TECHNOLOGY$: [This.fl_building_from_tech]"
  fl_bslot_from_cta: "\n$GOVERNMENT_CIVICS$/$TRADITIONS$/$ASCENSION_PERKS$: [This.fl_building_from_civic_trad_ap]"
  fl_bslot_from_holding: "\n$HOLDINGS$+$sm_orbital_ring_habitation$: [This.fl_building_from_orbital_module]"
  fl_bslot_from_demesne: "\n$district_orders_demesne_plural$: [This.fl_building_from_demesne]"
  fl_bslot_from_demesne_device: "\n$d_dimensional_manipulation_device$: [This.fl_building_from_demesne_device]"
  fl_bslot_from_origin: "\n$ORIGIN$: [This.fl_building_from_origin]"
  fl_bslot_from_pc: "\n$PLANETVIEW_PLANET_CLASS$: [This.fl_building_from_pc]"
  fl_bslot_from_housing: "\n$PLANET_HOUSING_TITLE$ $DISTRICTS$: [This.fl_building_from_housing]"
  fl_bslot_from_industrial_districts_buildings: "\n$district_industrial_plural$: [This.fl_building_from_industrial_districts_buildings]"
  fl_bslot_from_edicts: "\n$EDICTS$: [This.fl_building_from_edicts]"
  fl_bslot_from_orbitals: "\n$major_orbital_generic_plural$: [This.fl_building_from_orbitals]"
  fl_bslot_from_empire_mods: "\n$COUNTRY_MODIFIERS$: [This.fl_building_from_empire_mods]"
  fl_scope_planet: "£trigger_yes£ Scope is $PLANET$"
  fl_scope_not_planet: "£trigger_no£ Scope is NOT $PLANET$"
